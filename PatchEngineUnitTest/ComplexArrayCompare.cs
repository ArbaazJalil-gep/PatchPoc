using Newtonsoft.Json.Linq;
using PatchEngine.Core;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PatchEngineUnitTest
{
    public class ComplexArrayCompare
    {
        [Fact]
        public void TestCompare()
        {
            // Arrange
            var objParsed = JObject.Parse("{\n    \"left\": {\n    \"Id\": 1,\n    \"widgetManager\": {\n        \"Id\": \"widgetManager1\",\n        \"layout\": \"12\",\n        \"widgets\": [\n            {\n                \"Id\": \"widget-16784476843\",\n                \"title\": \"First\",\n                \"behaviour\": {\n                    \"Id\": \"000\",\n                    \"isVisible\": true,\n                    \"isDraggable\": \"yes\"\n                }\n            },\n            {\n                \"Id\": \"widget-000000001\",\n                \"title\": \"Should GetMerged\",\n                \"behaviour\": {\n                    \"Id\": \"behaviour1\",\n                    \"isVisible\": true,\n                    \"isDraggable\": \"no\",\n                    \"extraPropertyInLeft\": \"yep i am extra\"\n                }\n            }\n        ]\n    },\n    \"children\": [\n        {\n            \"isVisible\": true,\n            \"type\": \"text\",\n            \"Id\": \"widget-16784476843-field-16784479250\",\n            \"label\": \"Field Name\",\n            \"behaviour\": {\n                \"Id\": \"behavior1\",\n                \"autoRender\": false\n            },\n            \"attributes\": {\n                \"Id\": \"attributes1\",\n                \"disable\": false,\n                \"textAlign\": \"left\"\n            }\n        }\n    ],\n    \"breadCrumb\": {\n        \"Id\": \"breadCrumb1\",\n        \"navigation\": {\n            \"Id\": \"navigation1\",\n            \"sections\": [\n                {\n                    \"Id\": \"sections1\",\n                    \"routePath\": \"#\",\n                    \"title\": \"untitled\",\n                    \"emitEvent\": false\n                }\n            ]\n        },\n        \"heading\": {\n            \"Id\": \"heading1\",\n            \"title\": \"Untitled\",\n            \"secondaryTitle\": \"SecondTitle\"\n        }\n    }\n},\n    \"right\": {\n    \"Id\":1,\n    \"widgetManager\":{\n        \"Id\":\"widgetManager1\",\n        \"layout\":\"13\",\n        \"widgets\":[\n            {\n                \"Id\": \"widget-16784476843\",\n                \"title\": \"A\",\n                \"behaviour\": {\n                    \"Id\": \"000\",\n                    \"isVisible\": true,\n                    \"isDraggable\":\"yes\"\n                  }\n            },\n            {\n                \"Id\": \"widget-22224476843\",\n                \"title\": \"B\",\n                \"behaviour\": {\n                    \"Id\": \"behaviour2\",\n                    \"isVisible\": true,\n                    \"isDraggable\":\"no\"\n                  }\n            }\n            \n          ]\n    },\n    \"children\": [\n        {\n          \"isVisible\": true,         \n          \"type\": \"text\",\n          \"Id\": \"widget-16784476843-field-16784479250\",\n          \"label\": \"New Field Name\",\n          \"behaviour\": {\n            \"Id\":\"behavior1\",\n            \"autoRender\": true\n          },\n          \"attributes\": {\n            \"Id\":\"attributes1\",\n            \"disable\": false,\n            \"textAlign\": \"right\"\n          }\n        }\n      ] ,\n      \"breadCrumb\": {\n        \"Id\":\"breadCrumb1\",\n        \"navigation\": {\n            \"Id\":\"navigation1\",\n          \"sections\": [\n            {\n                \"Id\":\"sections1\",\n              \"routePath\": \"#\",\n              \"title\": \"SomeTitle\",\n              \"emitEvent\": false\n            }\n          ]\n        },\n        \"heading\": {\n            \"Id\":\"heading1\",\n          \"title\": \"cool heading\"\n        }\n      },\n      \"toolbar\":{\n        \"Id\":\"t1\",\n        \"toolbarName\":\"Fancy Toolbar\"\n      }\n  }\n}");

            var left = JToken.Parse(objParsed["left"].ToString());
            var right = JToken.Parse(objParsed["right"].ToString());

            // Act
            JToken result =  new JsonComparer().Compare(left, right, "");
            JToken expectedResult = JToken.Parse("[{\"Path\":\"widgetManager.layout\",\"LeftValue\":\"12\",\"RightValue\":\"13\",\"Op\":\"replace\"},{\"Path\":\"widgetManager.widgets:widget-16784476843.title\",\"LeftValue\":\"First\",\"RightValue\":\"A\",\"Op\":\"replace\"},{\"Path\":\"widgetManager.widgets:widget-000000001\",\"LeftValue\":{\"Id\":\"widget-000000001\",\"title\":\"Should GetMerged\",\"behaviour\":{\"Id\":\"behaviour1\",\"isVisible\":true,\"isDraggable\":\"no\",\"extraPropertyInLeft\":\"yep i am extra\"}},\"RightValue\":null,\"Op\":\"remove\"},{\"Path\":\"widgetManager.widgets:widget-22224476843\",\"LeftValue\":null,\"RightValue\":{\"Id\":\"widget-22224476843\",\"title\":\"B\",\"behaviour\":{\"Id\":\"behaviour2\",\"isVisible\":true,\"isDraggable\":\"no\"}},\"Op\":\"add\"},{\"Path\":\"children:widget-16784476843-field-16784479250.label\",\"LeftValue\":\"Field Name\",\"RightValue\":\"New Field Name\",\"Op\":\"replace\"},{\"Path\":\"children:widget-16784476843-field-16784479250.behaviour.autoRender\",\"LeftValue\":false,\"RightValue\":true,\"Op\":\"replace\"},{\"Path\":\"children:widget-16784476843-field-16784479250.attributes.textAlign\",\"LeftValue\":\"left\",\"RightValue\":\"right\",\"Op\":\"replace\"},{\"Path\":\"breadCrumb.navigation.sections:sections1.title\",\"LeftValue\":\"untitled\",\"RightValue\":\"SomeTitle\",\"Op\":\"replace\"},{\"Path\":\"breadCrumb.heading.title\",\"LeftValue\":\"Untitled\",\"RightValue\":\"cool heading\",\"Op\":\"replace\"},{\"Path\":\"breadCrumb.heading.secondaryTitle\",\"LeftValue\":\"SecondTitle\",\"RightValue\":null,\"Op\":\"remove\"},{\"Path\":\"toolbar\",\"LeftValue\":null,\"RightValue\":{\"Id\":\"t1\",\"toolbarName\":\"Fancy Toolbar\"},\"Op\":\"add\"}]");
            Assert.True(JToken.DeepEquals(result, expectedResult), "The result of the compare is incorrect.");
              
        }

    }
}
